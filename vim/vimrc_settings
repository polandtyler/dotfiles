" VIM Settings
" ------------------------------------------------------------

set mouse=a                     " enable mouse support"
set ttimeoutlen=20              " decrease timeout for faster insert with 'O'"
set vb                          " enable visual bell (disable audio bell)"

set nocompatible                " (cp) use Vim defaults (much better)
set ruler                       " (ru) show the cursor position at all times
set showcmd                     " (sc) display an incomplete command in the lower right
set history=200                 " (hi) keep 200 lines of command history
set showmatch                   " (sm) briefly jump to matching bracket when inserting one
set list listchars=tab:»·,trail:· " show extra space characters

set lazyredraw                  " screen not redrawn while executing macros, registers, and other command not typed
                                " - recommended by Gitv plugin creator, Greg Sexton

set wildmenu                    " better tab completion behavior in ex
set wildmode=list:longest,full

set autoindent                  " (ai) turn on auto-indenting (great for programers)
set copyindent                  " (ci) when auto-indenting, use the indenting format of the previous line
set smartindent                 " smartindent (local to buffer)

set tabstop=2                   " (ts) width (in spaces) that a <tab> is displayed as
set shiftwidth=2                " (sw) width (in spaces) used in each step of autoindent (aswell as << and >>)
set softtabstop=2
set expandtab
set textwidth=80                " (tw) number of columns before an automatic line break is inserted (see formatoptions)
set formatoptions=croq          " (fo) influences how vim automatically formats text
set backspace=indent,eol,start  " (bs) allows backspacing beyond starting point of insert mode, indents and line breaks
set nrformats+=alpha            " (nf) adds alpha chars to list that gets incremented/decremented with ^A/^X

set nowrap                      " allows text to continue off the window (need horizontal scrolling)
set relativenumber              " sets the numbers on the side to be relative to the mouse position
set number
" set numberwidth=4

set colorcolumn=80              " add 80 width marker so people won't point out useless comments in my js commits

set sidescrolloff=2
set scrolloff=2
set laststatus=2                " always show status line

set equalalways                 " Multiple windows, when created, are equal in size
set splitbelow splitright

set shellcmdflag=-lc            " Force shell commands to load personal bash init scripts

set nocursorline
"set cursorcolumn

set wrapscan                    " (ws) allows search to wrap to top of document when the bottom has been hit
set incsearch                   " (is) highlights what you are searching for as you type
set hlsearch                    " (hls) highlights all instances of the last searched string
set ignorecase                  " (ic) ignores case in search patterns
set smartcase                   " (scs) don't ignore case when the search pattern has uppercase
set infercase                   " (inf) during keyword completion, fix case of new word (when ignore case is on)

set foldcolumn=0                " (fdc) width of fold column (to see where folds are)
set foldmethod=manual           " (fdm) creates folds that make sense for the language
set nofoldenable                " (fen) enables or disables folding

set clipboard=unnamed           " copy/paste to "* by default

let mapleader=","

set backup
set backupdir=~/.vim_tmp
set dir=~/.vim_tmp

set t_Co=256 " 256 colors
set background=dark
syntax on " syntax highlighting
colorscheme mango

hi TabLineSel  ctermfg=244 ctermbg=235
hi TabLine     ctermfg=239 ctermbg=233
hi TabLineFill ctermfg=0   ctermbg=233

" setdark ll only forward escape sequences to the terminal if surrounded by a
" DCS sequence
"
" http://sourceforge.net/mailarchive/forum.php?thread_name=AANLkTinkbdoZ8eNR1X2UobLTeww1jFrvfJxTMfKSq-L%2B%40mail.gmail.com&forum_name=tmux-users
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

if has('nvim')
  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
  let g:python_host_prog = '/usr/local/bin/python'
  let g:python3_host_prog = '/usr/local/bin/python3'
endif

"""""""""""""""""
" Markdown Settings
" """""""""""""""""
let g:markdown_fenced_languages = ['bash=sh', 'css', 'erb=eruby',
 \ 'javascript', 'js=javascript', 'json=javascript', 'ruby', 'sass', 'sh', 'xml']

" Setup shellcheck
" set makeprg=shellcheck\ -f\ gcc\ %
autocmd FileType sh setlocal makeprg=shellcheck\ -f\ gcc\ %:S
" au BufWritePost * :silent make | redraw!
au QuickFixCmdPost [^l]* nested cwindow
au QuickFixCmdPost    l* nested lwindow

""""""""""""""""
" Colors
""""""""""""""""
highlight SpellCap term=undercurl cterm=undercurl ctermfg=88 ctermbg=232
highlight SpellRare term=undercurl cterm=undercurl

highlight SpellLocal term=undercurl cterm=undercurl

highlight Cursor guifg=green guibg=red
set cursorline
hi clear CursorLine
highlight CursorLine term=bold cterm=bold ctermbg=235
highlight CursorLineNr term=bold cterm=bold ctermbg=235 ctermfg=86
highlight Search ctermfg=51 ctermbg=238 cterm=underline

highlight SyntasticError cterm=underline ctermbg=232 ctermfg=203
highlight SyntasticWarning cterm=underline ctermbg=232 ctermfg=203
