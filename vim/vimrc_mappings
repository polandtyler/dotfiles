" Key Mappings
" ------------------------------------------------------------

"Vertical split then hop to new buffer
noremap <Leader>.v :vert new<cr>
noremap <Leader>.s :new<cr>
noremap <Leader>x :quit<cr>

" Alignment Shortcuts
vnoremap <Leader>a :Align
vnoremap <Leader>ah :Align =><cr>
vnoremap <Leader>ae :Align =<cr>

function! s:align_columns() range
  " execute a:firstline . ',' . a:lastline '!column -t'
  '<,'>!column -t
  '<,'>s/  \([^ ]\)/ \1/g
  nohls
  normal gv=
  redraw " gets rid of: Press Enter to continue
endfunction

vnoremap <silent> <Leader>ac :call <SID>align_columns()<cr>

" make scrolling the viewport a bit faster
nnoremap <C-e> 5<C-e>
nnoremap <C-y> 5<C-y>

" swap ' and ` keys. ` is more useful than ', but less convenient. FIXED.
nnoremap ' `
nnoremap ` '

" Cursor Movement *************************************************************
" Make cursor move by visual lines instead of file lines (when wrapping)
map <up> gk
map k gk
imap <up> <C-o>gk
map <down> gj
map j gj
imap <down> <C-o>gj
map E ge

" Override these cursor movements to make them more useful
" since ^ and $ are needed all the time but require leaving
" home row, and I never use H/M/L
map H ^
map L $

" allows moving between split windows much faster and more intuitive
map <C-up>    <C-W><up>
map <C-down>  <C-W><down>
map <C-left>  <C-W><left>
map <C-right> <C-W><right>

map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-H> <C-W>h
map <C-l> <C-W>l

if has('nvim')
  nmap <BS> <C-W>h
endif

" <F8> toggles whether the last searched string is highlighted
map  <F8> :set hls!<CR>
imap <F8> <ESC>:set hls!<CR>a

nnoremap <silent> <Space> :nohlsearch<cr>

" switch back to command mode using ctrl-c
noremap <C-C> <Esc>

" insert lines
nnoremap <leader>o o<ESC>
nnoremap <leader>O O<ESC>

" For easily finding erros
nmap [l :lnext<cr>
nmap ]l :lprev<cr>

function! JSFormat()
  " Preparation: save last search, and cursor position.
  let l:win_view = winsaveview()
  let l:last_search = getreg('/')
  let fileWorkingDirectory = expand('%:p:h')
  let currentWorkingDirectory = getcwd()
  execute ':lcd' . fileWorkingDirectory
  execute ':silent' . '%!esformatter'
  if v:shell_error
    undo
    "echo "esformatter error, using builtin vim formatter"
    " use internal formatting command
    execute ":silent normal! gg=G<cr>"
  endif
  " Clean up: restore previous search history, and cursor position
  execute ':lcd' . currentWorkingDirectory
  call winrestview(l:win_view)
  call setreg('/', l:last_search)
endfunction

nnoremap <silent> <leader>e :call JSFormat()<cr>

tnoremap <C-c> <C-\><C-n>
tnoremap <C-h> <C-\><C-N><C-w>h
tnoremap <C-j> <C-\><C-N><C-w>j
tnoremap <C-k> <C-\><C-N><C-w>k
tnoremap <C-l> <C-\><C-N><C-w>l
